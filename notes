#################################################################
#	KEYCLOAK
#################################################################

https://medium.com/devops-dudes/secure-front-end-react-js-and-back-end-node-js-express-rest-api-with-keycloak-daf159f0a94e



#################################################################
#	DOCKER
#################################################################

	don't use
npm install react-scripts --save

sudo chmod +x node_modules/.bin/react-scripts

	to connect to a bash shell inside container
docker exec -it container_name bash

docker run -t -i → can be detached with ^P^Qand reattached with docker attach
	
	setup docker-compose detached
docker-compose up -d

docker run -ti -v certs:/workspaces/certs --name PGADMIN_CERTSBIND pgadminwithbi
nd bash --expose 5080:80

#################################################################
#	DOCKER
#################################################################

docker build . -f "Dockerfile.dev" -t react-practice
docker-compose up
docker-compose down --rmi local


https://stackoverflow.com/questions/19335444/how-do-i-assign-a-port-mapping-to-an-existing-docker-container/26622041#26622041
docker commit test01 test02
docker run -p 8080:8080 -td test02

docker run --name name01 --expose port01 -td image01


docker run -p 80:80 \
	--name PGADMIN_DEV \
	-e "PGADMIN_DEFAULT_EMAIL=admin@ad.min" \
	-e "PGADMIN_DEFAULT_PASSWORD=admin" \
	-d dpage/pgadmin4



#################################################################
#	GIT
#################################################################

git clean -n
git clean -f

git rm --cached <file>

git reset HEAD -- path/to/file


git log


git reset --hard origin/master


  change branch
git log
git checkout <existing_branch>
git checkout -b <new_branch>

***** DELETE BRANCH - BECAREFUL *****
git branch -D <local-branch>

git push --set-upstream origin jul-branch

git pull origin master --rebase

git fetch
git rebase origin/master



git config --global user.email "random@gmail.com"
git config --global user.name "Name Here"

	rm file already added to repo - make sure to add to .gitignore
git rm --cache file

git config --global credential.helper cache

git remote set-url origin https://github.com/RemiB/myrepo.git
https://stackoverflow.com/questions/25545613/how-can-i-push-to-my-fork-from-a-clone-of-the-original-repo

 lines of code
git ls-files | xargs wc -l


#################################################################
#	NPM
#################################################################

npm start -- --port 8000
npm audit fix

npm install citysdk



	change expose port in package.json
"start": "PORT=3006 react-scripts start"

npm update -g

#################################################################
#	BASH
#################################################################

export $(grep -v '^#' .env | xargs)
export VAR=VALUE

echo VAR

docker ps
sudo docker inspect -f "{{ .NetworkSettings.IPAddress }}" container_name
ping –c 3 dock.er.ip.addr


#################################################################
#	ALPINE
#################################################################

apk add git


#################################################################
#	VIM
#################################################################

gg G
10gg
w - 1 word
b - back 1 word

d dd D - delete, delete whole line, delete rest of line
c C - delete and go into insert
s S - same as C properly indented 
x s - delete 1 character

y yy - yank
p P - paste
u - undo
v V - visual mode
o O - insert line
i I => ctrl+c | ctrl+ [ - insert before, quit insert
a A - insert after
:w - write
/<search phrase> => n N - search, next
# - same word last
* - same word next
viwp - paste over word

f F df - jump to character, delete to including
t T dt - jump to before character, delete to
; , - cycle through results
0$
J - argument to previous line

{ }
ctrl+u
ctrl+d
% - jump to matching pair, doesn't work for "
di} - delete to }
p - paragraph ie continuous block of code

= - indent
ci" - delete inside quotes

:reg - register
ctrl+^ - last file
"x - register
"_dd - delete into the void register without yanking
q<register><commands>q - macro
ctrl+a - increment next int
:5,10norm! @a - apply macro on a to line 5 to 10

:set smartcase
:set ignore case | ic

C-w n | v - split screen horizontal vertical
C-w H | J - switch to horizontal vertical
C-w q - close current split
C-w o - close everything except current buffer
C-w = - move all splits to default sizing
C-w r - rotate windows


:g/<pattern>/ - show all occurences in current file

:verbose map <key>


#################################################################
#	TMUX
#################################################################
b - prefix default
prefix + d - detach
prefix + ( - cycle between sessions
prefix + w - tree view of session and windows
  x - kill window

prefix + number - move to window
prefix + n - next window
prefix + p - previous window
prefix + " - split window horizontally
prefix + % - split window vertically
prefix + space - switch between different layouts

tmux neww -n "window name" - new window
tmux a - reattach
tmux list-sessions
tmux switch-client -t "session name" - switch session
tmux new-session -d -s "name"
tmux kill-server


-d detach
-t target

#################################################################
#	etc
#################################################################

https://slmeng.medium.com/how-to-install-powerline-fonts-in-windows-b2eedecace58

bash cheatsheet
https://blog.ssdnodes.com/blog/cheatsheet-bash-shortcuts/

#################################################################
#	Linux
#################################################################

grep -rnI "path" -e "text"
	-r => recursive
	-n => line number
	-I => ignore binary files

multithreading grep
find . -type f -print0 | xargs -0 -P NUMBER_OF_THREADS grep -nI -e "text" > files.txt

exclude line
grep -n -v "exclude text" file

length by line
awk '{ print length }' file

exclude files
find . -type f ! \( -name '*.tag' -o -path '*/path/*' \)

mix of pruning dir and file names
find . \( -name .git -o -name node_modules -o -name vender \) -type d -prune -o  -type f ! \( -name '*.csv' -o -name '*.json' -o -name '*.map' \)


export $(grep -v '^#' .env | xargs)

tail -f error.log

find . -type f -name "*.gpkg" -execdir zip "{}.zip" "{}" \;

tar -cvzf my_files.tar.gz file1 file2

tar -cvzf my_files.tar.gz *.gpkg



#################################################################
#	Windows
#################################################################

robocopy SOURCE DEST /MT /ZB /NFL /NDL /E


#################################################################
#	python
#################################################################

python -m venv new_env
source new_env/bin/activate.fish
deactivate
pip install -r requirements.txt

#################################################################
#	WSL
#################################################################

	clean up wsl virtual disk
https://superuser.com/questions/1606213/how-do-i-get-back-unused-disk-space-from-ubuntu-on-wsl2

diskpart 
select vdisk file="C:\Users\%username%\AppData\Local\Packages\CanonicalGroupLimited.Ubuntu20.04onWindows_79rhkp1fndgsc\LocalState\ext4.vhdx"
attach vdisk readonly
compact vdisk
detach vdisk


